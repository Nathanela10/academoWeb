{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\OneDrive\\\\Documentos\\\\React\\\\academoweb\\\\src\\\\components\\\\pages\\\\Login\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport './Login.css';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Title from './components/Title';\nimport Input from './components/Input';\nimport Item from './components/Item';\nimport Button from '../../commons/RegularButton';\nimport ModalError from '../../commons/ModalError';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: 2,\n    color: '#fff'\n  }\n}));\nlet localstorageData = localStorage.getItem('account');\nlet lsd = JSON.parse(localstorageData);\n\nconst Login = () => {\n  const classes = useStyles(); //Creo constantes para guardar información sobre los estados y datos\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLogin, setIsLogin] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasErrors, setHasErrors] = useState(false);\n  const open = true;\n  const [errors, setErrors] = useState({\n    usernameError: false,\n    passwordError: false\n  }); //esta función me permite hacer una validación, me permite saber si los inputs tienen información y si no la hay, cambia los estados de mis constantes anteriores\n\n  function handleChange(name, value) {\n    switch (name) {\n      case 'username':\n        setErrors({\n          usernameError: false,\n          passwordError: false\n        });\n        setHasErrors(false);\n        setUsername(value);\n        break;\n\n      case 'password':\n        setErrors({\n          usernameError: false,\n          passwordError: false\n        });\n        setHasErrors(false);\n        setPassword(value);\n        break;\n\n      default:\n        console.log('no hay valores');\n    }\n  } //esta función me permite cambiar los estados de usernameError y passwordError\n\n\n  function showErrors() {\n    setHasErrors(true);\n    setErrors({\n      usernameError: true,\n      passwordError: true\n    });\n  } //esta función detiene la transición de cargar la siguiente página y genera el label de error utlizando la funcion showError()\n\n\n  function stopIsLoading() {\n    setIsLoading(false);\n    showErrors();\n  } //Con esta función valido el login con el usuario y contraseña proporcionados en el código\n\n\n  function ifMatch(user, pass) {\n    if (user === 'jonathanvra' && pass === '123456' || user === lsd.username && pass === lsd.password) {\n      let ac = {\n        user,\n        pass,\n        firtsName: 'Jonathan'\n      };\n      let account = JSON.stringify(ac);\n      localStorage.setItem('account', account);\n      setTimeout(() => setIsLogin(true), 2000);\n    } else {\n      setTimeout(() => stopIsLoading(), 2000);\n    }\n  } //creo el evento utilizado en botón ingresar y procedo a ejecutar la función de validación ifMatch()\n\n\n  function handleOnClick() {\n    setIsLoading(true);\n    let login = {\n      username,\n      password\n    };\n\n    if (login) {\n      ifMatch(username, password);\n    }\n  } //Si los datos ingresados son incorrectos, esta función limpia los inputs de usuario y contraseña\n\n\n  function clearErrorModal() {\n    setHasErrors(false);\n    setErrors({\n      usernameError: false,\n      passwordError: false\n    });\n  }\n\n  let params = errors.usernameError === false && errors.passwordError === false;\n  return React.createElement(React.Fragment, null, isLogin && React.createElement(Redirect, {\n    to: \"/home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"LoginContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"LoginContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"LoginHigher\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"LoginLower\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Title, {\n    text: \"(ACADEMO)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), hasErrors && React.createElement(ModalError, {\n    title: \"A ocurrido un error,\",\n    text: \"El usuario o la contrase\\xF1a no son correctos.\",\n    handleOnClick: clearErrorModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"ItemUserLogin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Item, {\n    text: \"Usuario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(Input, {\n    attribute: {\n      name: 'username',\n      inputType: 'text',\n      ph: ''\n    },\n    handleChange: handleChange,\n    param: errors.usernameError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"ItemPasswordLogin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Item, {\n    text: \"Contrase\\xF1a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(Input, {\n    attribute: {\n      name: 'password',\n      inputType: 'password',\n      ph: ''\n    },\n    handleChange: handleChange,\n    param: errors.passwordError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(Button, {\n    text: \"Ingresar\",\n    handleOnClick: handleOnClick,\n    param: params,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/createUser\",\n    style: {\n      color: '#734488'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Item, {\n    text: \"Quiero registrarme.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))), isLoading && React.createElement(Backdrop, {\n    open: open,\n    className: classes.backdrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/jonat/OneDrive/Documentos/React/academoweb/src/components/pages/Login/Login.js"],"names":["React","useState","Redirect","Link","Backdrop","CircularProgress","Title","Input","Item","Button","ModalError","makeStyles","useStyles","theme","backdrop","zIndex","color","localstorageData","localStorage","getItem","lsd","JSON","parse","Login","classes","username","setUsername","password","setPassword","isLogin","setIsLogin","isLoading","setIsLoading","hasErrors","setHasErrors","open","errors","setErrors","usernameError","passwordError","handleChange","name","value","console","log","showErrors","stopIsLoading","ifMatch","user","pass","ac","firtsName","account","stringify","setItem","setTimeout","handleOnClick","login","clearErrorModal","params","inputType","ph","display","justifyContent","alignItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CADA;AAERC,IAAAA,KAAK,EAAE;AAFC;AAD2B,CAAL,CAAN,CAA5B;AAOA,IAAIC,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAvB;AAEA,IAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWL,gBAAX,CAAV;;AAEA,MAAMM,KAAK,GAAG,MAAM;AAEhB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB,CAFgB,CAGhB;;AACA,QAAM,CAAEa,QAAF,EAAYC,WAAZ,IAA4BzB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAE0B,QAAF,EAAYC,WAAZ,IAA4B3B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAE4B,OAAF,EAAWC,UAAX,IAA0B7B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAE8B,SAAF,EAAaC,YAAb,IAA8B/B,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAEgC,SAAF,EAAaC,YAAb,IAA8BjC,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMkC,IAAI,GAAG,IAAb;AAEA,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBpC,QAAQ,CAAC;AACnCqC,IAAAA,aAAa,EAAE,KADoB;AAEnCC,IAAAA,aAAa,EAAE;AAFoB,GAAD,CAAtC,CAZgB,CAgBhB;;AACA,WAASC,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;AAC/B,YAAOD,IAAP;AACI,WAAK,UAAL;AACIJ,QAAAA,SAAS,CAAC;AAAEC,UAAAA,aAAa,EAAE,KAAjB;AAAwBC,UAAAA,aAAa,EAAE;AAAvC,SAAD,CAAT;AACAL,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAR,QAAAA,WAAW,CAACgB,KAAD,CAAX;AACA;;AACJ,WAAK,UAAL;AACIL,QAAAA,SAAS,CAAC;AAAEC,UAAAA,aAAa,EAAE,KAAjB;AAAwBC,UAAAA,aAAa,EAAE;AAAvC,SAAD,CAAT;AACAL,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAN,QAAAA,WAAW,CAACc,KAAD,CAAX;AACA;;AACJ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAZJ;AAcH,GAhCe,CAiChB;;;AACA,WAASC,UAAT,GAAsB;AAClBX,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,IAAAA,SAAS,CAAC;AAAEC,MAAAA,aAAa,EAAE,IAAjB;AAAuBC,MAAAA,aAAa,EAAE;AAAtC,KAAD,CAAT;AACH,GArCe,CAsChB;;;AACA,WAASO,aAAT,GAAyB;AACrBd,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAa,IAAAA,UAAU;AACb,GA1Ce,CA2ChB;;;AACA,WAASE,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AACzB,QAAID,IAAI,KAAK,aAAT,IAA0BC,IAAI,KAAK,QAApC,IACED,IAAI,KAAK5B,GAAG,CAACK,QAAb,IACDwB,IAAI,KAAK7B,GAAG,CAACO,QAFjB,EAE6B;AACzB,UAAIuB,EAAE,GAAG;AAACF,QAAAA,IAAD;AAAOC,QAAAA,IAAP;AAAaE,QAAAA,SAAS,EAAE;AAAxB,OAAT;AACA,UAAIC,OAAO,GAAG/B,IAAI,CAACgC,SAAL,CAAeH,EAAf,CAAd;AACAhC,MAAAA,YAAY,CAACoC,OAAb,CAAqB,SAArB,EAAgCF,OAAhC;AACAG,MAAAA,UAAU,CAAC,MAAMzB,UAAU,CAAC,IAAD,CAAjB,EAAyB,IAAzB,CAAV;AACH,KAPD,MAOO;AACJyB,MAAAA,UAAU,CAAC,MAAMT,aAAa,EAApB,EAAwB,IAAxB,CAAV;AACF;AACJ,GAvDe,CAwDhB;;;AACA,WAASU,aAAT,GAAyB;AACrBxB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,QAAIyB,KAAK,GAAG;AAAEhC,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAZ;;AACA,QAAG8B,KAAH,EAAU;AACNV,MAAAA,OAAO,CAACtB,QAAD,EAAWE,QAAX,CAAP;AACH;AACJ,GA/De,CAgEhB;;;AACA,WAAS+B,eAAT,GAA2B;AACvBxB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAG,IAAAA,SAAS,CAAC;AAAEC,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,aAAa,EAAE;AAAvC,KAAD,CAAT;AACH;;AAED,MAAIoB,MAAM,GACNvB,MAAM,CAACE,aAAP,KAAyB,KAAzB,IACAF,MAAM,CAACG,aAAP,KAAyB,KAF7B;AAKA,SACI,0CAEEV,OAAO,IAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFb,EAII;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAIMI,SAAS,IACP,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,sBADV;AAEI,IAAA,IAAI,EAAC,iDAFT;AAGI,IAAA,aAAa,EAAEyB,eAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,EAWQ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AACI,IAAA,SAAS,EAAE;AACPjB,MAAAA,IAAI,EAAE,UADC;AAEPmB,MAAAA,SAAS,EAAE,MAFJ;AAGPC,MAAAA,EAAE,EAAE;AAHG,KADf;AAMI,IAAA,YAAY,EAAErB,YANlB;AAOI,IAAA,KAAK,EAAEJ,MAAM,CAACE,aAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXR,EAuBQ;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AACI,IAAA,SAAS,EAAE;AACPG,MAAAA,IAAI,EAAE,UADC;AAEPmB,MAAAA,SAAS,EAAE,UAFJ;AAGPC,MAAAA,EAAE,EAAE;AAHG,KADf;AAMI,IAAA,YAAY,EAAErB,YANlB;AAOI,IAAA,KAAK,EAAEJ,MAAM,CAACG,aAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAvBR,EAmCQ,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,aAAa,EAAEiB,aAFnB;AAGI,IAAA,KAAK,EAAEG,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCR,EA0CQ;AACA,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE,MAAX;AACPC,MAAAA,cAAc,EAAE,QADT;AAEPC,MAAAA,UAAU,EAAE;AAFL,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AACA,IAAA,EAAE,EAAC,aADH;AAEA,IAAA,KAAK,EAAE;AAAEhD,MAAAA,KAAK,EAAE;AAAT,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AACA,IAAA,IAAI,EAAC,qBADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALJ,CA1CR,EAyDMe,SAAS,IACP,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEI,IAAhB;AAAsB,IAAA,SAAS,EAAEX,OAAO,CAACV,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA1DR,CAFJ,CADJ,CADJ,CAJJ,CADJ;AA8EH,CAzJD;;AA2JA,eAAeS,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport './Login.css';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Title from './components/Title';\nimport Input from './components/Input';\nimport Item from './components/Item';\nimport Button from '../../commons/RegularButton';\nimport ModalError from '../../commons/ModalError';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: 2,\n    color: '#fff',\n  },\n}));\n\nlet localstorageData = localStorage.getItem('account')\n\nlet lsd = JSON.parse(localstorageData)\n\nconst Login = () => {\n\n    const classes = useStyles();\n    //Creo constantes para guardar información sobre los estados y datos\n    const [ username, setUsername ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const [ isLogin, setIsLogin ] = useState(false);\n    const [ isLoading, setIsLoading ] = useState(false);\n    const [ hasErrors, setHasErrors ] = useState(false);\n\n    const open = true;\n\n    const [ errors, setErrors ] = useState({\n        usernameError: false,\n        passwordError: false\n    })\n    //esta función me permite hacer una validación, me permite saber si los inputs tienen información y si no la hay, cambia los estados de mis constantes anteriores\n    function handleChange(name, value) {\n        switch(name) {\n            case 'username':\n                setErrors({ usernameError: false, passwordError: false });\n                setHasErrors(false);\n                setUsername(value);\n                break;\n            case 'password':\n                setErrors({ usernameError: false, passwordError: false });\n                setHasErrors(false);\n                setPassword(value);\n                break;\n            default: \n            console.log('no hay valores')\n        }\n    }\n    //esta función me permite cambiar los estados de usernameError y passwordError\n    function showErrors() {\n        setHasErrors(true);\n        setErrors({ usernameError: true, passwordError: true })\n    }\n    //esta función detiene la transición de cargar la siguiente página y genera el label de error utlizando la funcion showError()\n    function stopIsLoading() {\n        setIsLoading(false);\n        showErrors();\n    }\n    //Con esta función valido el login con el usuario y contraseña proporcionados en el código\n    function ifMatch(user, pass) {\n        if((user === 'jonathanvra' && pass === '123456') ||\n            (user === lsd.username && \n            pass === lsd.password )) {\n            let ac = {user, pass, firtsName: 'Jonathan'}\n            let account = JSON.stringify(ac)\n            localStorage.setItem('account', account)\n            setTimeout(() => setIsLogin(true), 2000)\n        } else {\n           setTimeout(() => stopIsLoading(), 2000)\n        }\n    }\n    //creo el evento utilizado en botón ingresar y procedo a ejecutar la función de validación ifMatch()\n    function handleOnClick() {\n        setIsLoading(true);\n        let login = { username, password }\n        if(login) {\n            ifMatch(username, password)\n        }\n    }\n    //Si los datos ingresados son incorrectos, esta función limpia los inputs de usuario y contraseña\n    function clearErrorModal() {\n        setHasErrors(false);\n        setErrors({ usernameError: false, passwordError: false })\n    }\n\n    let params = \n        errors.usernameError === false &&\n        errors.passwordError === false\n    ;\n\n    return (\n        <>\n        \n        { isLogin && <Redirect to='/home' /> }\n\n            <div className='LoginContainer'>\n                <div className='LoginContent'>\n                    <div className='Login'>\n                        <div className='LoginHigher' />\n                        <div className='LoginLower'>\n                            <Title text='(ACADEMO)' />\n                            {//Si hay un cambio de estado en hasError, se utliza el component ModalError, se muestra dos etiquetas de texto y se activa la función clearErrorModal()\n                            }\n                            { hasErrors &&\n                                <ModalError\n                                    title='A ocurrido un error,'\n                                    text=\"El usuario o la contraseña no son correctos.\"\n                                    handleOnClick={clearErrorModal}\n                                />\n                            }\n                                <div className='ItemUserLogin'>\n                                    <Item text='Usuario' />\n                                    <Input\n                                        attribute={{\n                                            name: 'username',\n                                            inputType: 'text',\n                                            ph: ''\n                                        }}\n                                        handleChange={handleChange}\n                                        param={errors.usernameError}\n                                    />\n                                </div>\n                                <div className='ItemPasswordLogin'>\n                                    <Item text='Contraseña' />\n                                    <Input\n                                        attribute={{\n                                            name: 'password',\n                                            inputType: 'password',\n                                            ph: ''\n                                        }}\n                                        handleChange={handleChange}\n                                        param={errors.passwordError}\n                                    />\n                                </div>\n                                <Button \n                                    text='Ingresar'\n                                    handleOnClick={handleOnClick}\n                                    param={params}\n                                />\n                                {//El siguiente div contiene el código que por medio de link me permite dirigirme a un formulario de registro de usuario\n                                }\n                                <div \n                                style={{ display: 'flex', \n                                justifyContent: 'center',\n                                alignItems: 'center' \n                                }}>\n                                    <Link \n                                    to='/createUser'\n                                    style={{ color: '#734488' }}\n                                    >\n                                        <Item \n                                        text='Quiero registrarme.' />\n                                    </Link>\n                                </div>\n                            {//cuando se inicia el proceso de validación de datos, se ejecuta la animación de cargar y dirigirnos a otra página\n                            }\n                            { isLoading &&\n                                <Backdrop open={open} className={classes.backdrop}>\n                                    <CircularProgress color=\"inherit\" />\n                                </Backdrop>\n                            }\n                          \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}