{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Downloads\\\\login-in-react-master\\\\login-in-react-master\\\\src\\\\components\\\\pages\\\\Login\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport \"./Login.css\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Title from \"./components/Title\";\nimport Input from \"./components/Input\";\nimport Item from \"./components/Item\";\nimport Button from \"../../commons/RegularButton\";\nimport ModalError from \"../../commons/ModalError\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: 2,\n    color: \"#fff\"\n  }\n}));\nlet localstorageData = localStorage.getItem(\"account\");\nlet lsd = JSON.parse(localstorageData);\n\nconst Login = () => {\n  const classes = useStyles(); //Creo constantes para guardar información sobre los estados y datos\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasErrors, setHasErrors] = useState(false);\n  const open = true;\n  const [errors, setErrors] = useState({\n    usernameError: false,\n    passwordError: false\n  }); //esta función me permite hacer una validación, me permite saber si los inputs tienen información y si no la hay, cambia los estados de mis constantes anteriores\n\n  function handleChange(name, value) {\n    switch (name) {\n      case \"username\":\n        setErrors({\n          usernameError: false,\n          passwordError: false\n        });\n        setHasErrors(false);\n        setUsername(value);\n        break;\n\n      case \"password\":\n        setErrors({\n          usernameError: false,\n          passwordError: false\n        });\n        setHasErrors(false);\n        setPassword(value);\n        break;\n\n      default:\n        console.log(\"no hay valores\");\n    }\n  } //esta función me permite cambiar los estados de usernameError y passwordError\n\n\n  function showErrors() {\n    setHasErrors(true);\n    setErrors({\n      usernameError: true,\n      passwordError: true\n    });\n  } //esta función detiene la transición de cargar la siguiente página y genera el label de error utlizando la funcion showError()\n\n\n  function stopIsLoading() {\n    setIsLoading(false);\n    showErrors();\n  } //Con esta función valido el login con el usuario y contraseña proporcionados en el código\n\n\n  function ifMatch(user, pass) {\n    if (user === \"jonathanvra\" && pass === \"123456\" || user === lsd.username && pass === lsd.password) {\n      let ac = {\n        user,\n        pass,\n        firtsName: \"Jonathan\"\n      };\n      let account = JSON.stringify(ac);\n      localStorage.setItem(\"account\", account);\n      setTimeout(() => setIsLogin(true), 2000);\n    } else {\n      setTimeout(() => stopIsLoading(), 2000);\n    }\n  } //creo el evento utilizado en botón ingresar y procedo a ejecutar la función de validación ifMatch()\n\n\n  function handleOnClick() {\n    setIsLoading(true);\n    let login = {\n      username,\n      password\n    };\n\n    if (login) {\n      ifMatch(username, password);\n    }\n  } //Si los datos ingresados son incorrectos, esta función limpia los inputs de usuario y contraseña\n\n\n  function clearErrorModal() {\n    setHasErrors(false);\n    setErrors({\n      usernameError: false,\n      passwordError: false\n    });\n  }\n\n  let params = errors.usernameError === false && errors.passwordError === false;\n  return React.createElement(React.Fragment, null, isLogin && React.createElement(Redirect, {\n    to: \"/home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Login__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Login__content__higher\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Login__content__lower\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Title, {\n    text: \"(ACADEMO)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), hasErrors && React.createElement(ModalError, {\n    title: \"A ocurrido un error,\",\n    text: \"El usuario o la contrase\\xF1a no son correctos.\",\n    handleOnClick: clearErrorModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Login__content__lower__user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Item, {\n    text: \"Usuario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Input, {\n    attribute: {\n      name: \"username\",\n      inputType: \"text\",\n      ph: \"\"\n    },\n    handleChange: handleChange,\n    param: errors.usernameError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"Login__content__lower__pass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Item, {\n    text: \"Contrase\\xF1a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(Input, {\n    attribute: {\n      name: \"password\",\n      inputType: \"password\",\n      ph: \"\"\n    },\n    handleChange: handleChange,\n    param: errors.passwordError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(Button, {\n    text: \"Ingresar\",\n    handleOnClick: handleOnClick,\n    param: params,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/createUser\",\n    style: {\n      color: \"#734488\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Item, {\n    text: \"Quiero registrarme.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))), isLoading && React.createElement(Backdrop, {\n    open: open,\n    className: classes.backdrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/jonat/Downloads/login-in-react-master/login-in-react-master/src/components/pages/Login/Login.js"],"names":["React","useState","Redirect","Link","Backdrop","CircularProgress","Title","Input","Item","Button","ModalError","makeStyles","useStyles","theme","backdrop","zIndex","color","localstorageData","localStorage","getItem","lsd","JSON","parse","Login","classes","username","setUsername","password","setPassword","isLogin","setIsLogin","isLoading","setIsLoading","hasErrors","setHasErrors","open","errors","setErrors","usernameError","passwordError","handleChange","name","value","console","log","showErrors","stopIsLoading","ifMatch","user","pass","ac","firtsName","account","stringify","setItem","setTimeout","handleOnClick","login","clearErrorModal","params","inputType","ph","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport \"./Login.css\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Title from \"./components/Title\";\nimport Input from \"./components/Input\";\nimport Item from \"./components/Item\";\nimport Button from \"../../commons/RegularButton\";\nimport ModalError from \"../../commons/ModalError\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: 2,\n    color: \"#fff\",\n  },\n}));\n\nlet localstorageData = localStorage.getItem(\"account\");\n\nlet lsd = JSON.parse(localstorageData);\n\nconst Login = () => {\n  const classes = useStyles();\n  //Creo constantes para guardar información sobre los estados y datos\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasErrors, setHasErrors] = useState(false);\n\n  const open = true;\n\n  const [errors, setErrors] = useState({\n    usernameError: false,\n    passwordError: false,\n  });\n  //esta función me permite hacer una validación, me permite saber si los inputs tienen información y si no la hay, cambia los estados de mis constantes anteriores\n  function handleChange(name, value) {\n    switch (name) {\n      case \"username\":\n        setErrors({ usernameError: false, passwordError: false });\n        setHasErrors(false);\n        setUsername(value);\n        break;\n      case \"password\":\n        setErrors({ usernameError: false, passwordError: false });\n        setHasErrors(false);\n        setPassword(value);\n        break;\n      default:\n        console.log(\"no hay valores\");\n    }\n  }\n  //esta función me permite cambiar los estados de usernameError y passwordError\n  function showErrors() {\n    setHasErrors(true);\n    setErrors({ usernameError: true, passwordError: true });\n  }\n  //esta función detiene la transición de cargar la siguiente página y genera el label de error utlizando la funcion showError()\n  function stopIsLoading() {\n    setIsLoading(false);\n    showErrors();\n  }\n  //Con esta función valido el login con el usuario y contraseña proporcionados en el código\n  function ifMatch(user, pass) {\n    if (\n      (user === \"jonathanvra\" && pass === \"123456\") ||\n      (user === lsd.username && pass === lsd.password)\n    ) {\n      let ac = { user, pass, firtsName: \"Jonathan\" };\n      let account = JSON.stringify(ac);\n      localStorage.setItem(\"account\", account);\n      setTimeout(() => setIsLogin(true), 2000);\n    } else {\n      setTimeout(() => stopIsLoading(), 2000);\n    }\n  }\n  //creo el evento utilizado en botón ingresar y procedo a ejecutar la función de validación ifMatch()\n  function handleOnClick() {\n    setIsLoading(true);\n    let login = { username, password };\n    if (login) {\n      ifMatch(username, password);\n    }\n  }\n  //Si los datos ingresados son incorrectos, esta función limpia los inputs de usuario y contraseña\n  function clearErrorModal() {\n    setHasErrors(false);\n    setErrors({ usernameError: false, passwordError: false });\n  }\n\n  let params = errors.usernameError === false && errors.passwordError === false;\n  return (\n    <>\n      {isLogin && <Redirect to=\"/home\" />}\n\n      <div className=\"Login\">\n        <div className=\"Login__content\">\n          <div className=\"Login__content__higher\" />\n          <div className=\"Login__content__lower\">\n            <Title text=\"(ACADEMO)\" />\n            {\n              //Si hay un cambio de estado en hasError, se utliza el component ModalError, se muestra dos etiquetas de texto y se activa la función clearErrorModal()\n            }\n            {hasErrors && (\n              <ModalError\n                title=\"A ocurrido un error,\"\n                text=\"El usuario o la contraseña no son correctos.\"\n                handleOnClick={clearErrorModal}\n              />\n            )}\n            <div className=\"Login__content__lower__user\">\n              <Item text=\"Usuario\" />\n              <Input\n                attribute={{\n                  name: \"username\",\n                  inputType: \"text\",\n                  ph: \"\",\n                }}\n                handleChange={handleChange}\n                param={errors.usernameError}\n              />\n            </div>\n            <div className=\"Login__content__lower__pass\">\n              <Item text=\"Contraseña\" />\n              <Input\n                attribute={{\n                  name: \"password\",\n                  inputType: \"password\",\n                  ph: \"\",\n                }}\n                handleChange={handleChange}\n                param={errors.passwordError}\n              />\n            </div>\n            <Button\n              text=\"Ingresar\"\n              handleOnClick={handleOnClick}\n              param={params}\n            />\n            {\n              //El siguiente div contiene el código que por medio de link me permite dirigirme a un formulario de registro de usuario\n            }\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Link to=\"/createUser\" style={{ color: \"#734488\" }}>\n                <Item text=\"Quiero registrarme.\" />\n              </Link>\n            </div>\n            {\n              //cuando se inicia el proceso de validación de datos, se ejecuta la animación de cargar y dirigirnos a otra página\n            }\n            {isLoading && (\n              <Backdrop open={open} className={classes.backdrop}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}